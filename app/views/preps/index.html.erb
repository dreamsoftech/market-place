<style type="text/css"> /*Calendar Caption*/
.fc-header-title h2 {
    margin-top: 0;
    white-space: nowrap;
    font-size: 22px;
}
</style>
<div class="container">		
	<div class="row-fluid">
		<div class="span3">
	    <%= render "profile_sidebar" %><!-- :locals => { member: Member.new(), group_id: @group.id } -->
		</div><!--/span3-->
		<!-- Search Results -->
		<div class="span8">
			<br>
			<%= render "layouts/messages" %>
			<% @preps.each do |p| %>
		    <div class="row-fluid">
		      <div class="booking-blocks">
		        <div class="span3 pull-left booking-img">
	            <img src="/assets/new/img1.jpg" alt="">
	            <ul class="unstyled inline">
	               <li><span class="rating-static rating-45"></span></li>
	               <li><i class="icon-star"></i></li>
	               <li><i class="icon-star"></i></li>
	               <li><i class="icon-star"></i></li>
	               <li><i class="icon-star"></i></li>
	               <li><i class="icon-star-empty"></i></li>
	            </ul>
		        </div>
		        <div class="span8" style="overflow:hidden;">
	            <h2><%= link_to p.title, prep_path(p) %></a></h2>
	            <p>Posted <%= p.elapsed %> ago </p>
	            <p>
								<% if !p.description.nil? && p.description.length > 200 %>
		            	<%= p.description.slice(0, 200) + "... " %>
		            	<a href="#">more</a>
		            <% else %>
		            	<%= p.description %>
		            <% end %>
		          </p>
		          <div class="pull-left blog-page blog-item">
			         	<ul class="unstyled inline blog-tags">
			         		<%
			         			required_skills = p.required_skills.split(',')
			         		%>
			         		<% required_skills.each do |s| %>
		            		<li><a href="#"><%= s %></a></li>
		            	<% end %>
		            </ul>
		          </div>
			      </div>
	        </div>
		    </div>
	    <% end %>
		</div><!--/span9-->
	</div><!--/row-fluid-->
</div><!--/container-->

<script type="text/javascript">

	/* initialize the calendar
	-----------------------------------------------------------------*/

	var date = new Date();
	var d = date.getDate();
	var m = date.getMonth();
	var y = date.getFullYear();

	
	var calendar = $('#calendar').fullCalendar({
		 buttonText: {
			prev: '<i class="icon-chevron-left"></i>',
			next: '<i class="icon-chevron-right"></i>'
		},
	
		header: {
			left: 'prev',
			center: 'title',
			right: 'next'
			// right: 'month,agendaWeek,agendaDay'
		},
		editable: true,
		droppable: true, // this allows things to be dropped onto the calendar !!!
		drop: function(date, allDay) { // this function is called when something is dropped
		
			// retrieve the dropped element's stored Event Object
			var originalEventObject = $(this).data('eventObject');
			var $extraEventClass = $(this).attr('data-class');
			
			
			// we need to copy it, so that multiple events don't have a reference to the same object
			var copiedEventObject = $.extend({}, originalEventObject);
			
			// assign it the date that was reported
			copiedEventObject.start = date;
			copiedEventObject.allDay = allDay;
			if($extraEventClass) copiedEventObject['className'] = [$extraEventClass];
			
			// render the event on the calendar
			// the last `true` argument determines if the event "sticks" (http://arshaw.com/fullcalendar/docs/event_rendering/renderEvent/)
			$('#calendar').fullCalendar('renderEvent', copiedEventObject, true);
			
			// is the "remove after drop" checkbox checked?
			if ($('#drop-remove').is(':checked')) {
				// if so, remove the element from the "Draggable Events" list
				$(this).remove();
			}
			
		},
		events: [
		{
			title: '1',
			start: new Date(y, m, 1),
			className: 'btn-u-red'
		}]
		,
		selectable: true,
		selectHelper: true,
		select: function(start, end, allDay) {
			
			bootbox.prompt("New Event Title:", function(title) {
				if (title !== null) {
					calendar.fullCalendar('renderEvent',
						{
							title: title,
							start: start,
							end: end,
							allDay: allDay
						},
						true // make the event "stick"
					);
				}
			});
			

			calendar.fullCalendar('unselect');
			
		}
		,
		eventClick: function(calEvent, jsEvent, view) {

			var form = $("<form class='form-inline'><label>Change event name &nbsp;</label></form>");
			form.append("<input autocomplete=off type=text value='" + calEvent.title + "' /> ");
			form.append("<button type='submit' class='btn btn-small btn-success'><i class='icon-ok'></i> Save</button>");
			
			var div = bootbox.dialog(form,
				[
				{
					"label" : "<i class='icon-trash'></i> Delete Event",
					"class" : "btn-small btn-danger",
					"callback": function() {
						calendar.fullCalendar('removeEvents' , function(ev){
							return (ev._id == calEvent._id);
						})
					}
				}
				,
				{
					"label" : "<i class='icon-remove'></i> Close",
					"class" : "btn-small"
				}]
				,
				{
					// prompts need a few extra options
					"onEscape": function(){div.modal("hide");}
				}
			);
			
			form.on('submit', function(){
				calEvent.title = form.find("input[type=text]").val();
				calendar.fullCalendar('updateEvent', calEvent);
				div.modal("hide");
				return false;
			});
			
		
			//console.log(calEvent.id);
			//console.log(jsEvent);
			//console.log(view);

			// change the border color just for fun
			//$(this).css('border-color', 'red');

		}
		
	});
</script>